apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  # generateName: add-pet-
  name: add-pet
spec:
  serviceAccountName: runner
  entrypoint: main
  arguments:
    parameters:
    - name: url
      value: http://petstore.dev.me:1880
  templates:
    - name: main
      # inputs:

      steps:
        - - name: generate-pet-id
            template: random-int
        - - name: add-pet
            template: http-add-pet
            arguments:
              parameters:
                - name: path
                  value: "/api/v3/pet"
                - name: petId
                  value: "{{steps.generate-pet-id.outputs.result}}"
        - - name: debug
            template: print-message
            arguments:
              parameters:
              - name: message
                value: "{{steps.add-pet.outputs.result}}"
        - - name: extract-pet-id
            template: jq
            arguments:
              parameters:
                - name: json
                  value: "{{steps.add-pet.outputs.result}}"

        - - name: get-pet
            template: http-get-pet
            arguments:
              parameters:
                - name: path
                  value: "/api/v3/pet"
                - name: id
                  value: "{{steps.extract-pet-id.outputs.result}}"
        - - name: print-result
            template: print-message
            arguments:
              parameters:
              - name: message
                value: "{{steps.get-pet.outputs.result}}"
    - name: random-int
      script:
        image: python:alpine3.6
        command: [python]
        source: |
          import random
          i = random.randint(1, 99999)
          print(i)
    - name: print-message
      inputs:
        parameters:
        - name: message
      container:
        image: alpine:latest
        command: [sh, -c]
        args:
          - echo "{{inputs.parameters.message}}"
    - name: jq
      inputs:
        parameters:
        - name: json
      script:
        image: registry.gitlab.com/gitlab-ci-utils/curl-jq:latest
        command: [sh, -c]
        source: |
          echo '{{inputs.parameters.json}}' | jq .id
    - name: http-add-pet
      activeDeadlineSeconds: 60 # terminate workflow after 10 seconds
      retryStrategy:
        limit: 1
      inputs:
        parameters:
          - name: path
          - name: petId
      http:
        
        timeoutSeconds: 60 # Default 30

        url: "{{workflow.parameters.url}}{{inputs.parameters.path}}"
        method: "POST" # Default GET
        headers:
          - name: "accept"
            value: "application/json"
          - name: "Content-Type"
            value: "application/json"
        # Template will succeed if evaluated to true, otherwise will fail
        # Available variables:
        #  request.body: string, the request body
        #  request.headers: map[string][]string, the request headers
        #  response.url: string, the request url
        #  response.method: string, the request method
        #  response.statusCode: int, the response status code
        #  response.body: string, the response body
        #  response.headers: map[string][]string, the response headers
        successCondition: "response.statusCode == 200" # available since v3.3
        # Change request body
        body: |
          {
            "id": {{inputs.parameters.petId}},
            "category": {
              "id": 0,
              "name": "string"
            },
            "name": "hahaha",
            "photoUrls": [
              "string"
            ],
            "tags": [
              {
                "id": 0,
                "name": "string"
              }
            ],
            "status": "available"
          } 
    - name: http-get-pet
      activeDeadlineSeconds: 60 # terminate workflow after 10 seconds
      retryStrategy:
        limit: 2
      inputs:
        parameters:
          - name: path
          - name: id
      http:
        
        timeoutSeconds: 90 # Default 30

        url: "{{workflow.parameters.url}}{{inputs.parameters.path}}/{{inputs.parameters.id}}"
        method: "GET" # Default GET
        headers:
          - name: "accept"
            value: "application/json"
          - name: "Content-Type"
            value: "application/json"
        successCondition: "response.statusCode == 200" # available since v3.3